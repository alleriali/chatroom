// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.chatroom";
option java_outer_classname = "ChatroomProto";
option objc_class_prefix = "HLW";

package chatroom;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

enum MessageType {
    JOIN = 0;
    LEAVE = 1;
    TEXT = 2;
}

message ChatMessage {
    MessageType type = 1;
    string message = 11;
    string username = 12;
    string password = 13;
}

message ChatMessageFromServer {
    MessageType type = 2;

    string from = 11;
    string message = 12;
}

message AuthenticateRequest{
    string username = 1;
}

message AuthenticateReply{
    bool isValid = 1;
}


service ChatStreamService {
    rpc chat(stream ChatMessage) returns (stream ChatMessageFromServer);
    rpc authenticate(AuthenticateRequest) returns (AuthenticateReply);
}

